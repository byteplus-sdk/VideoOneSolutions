plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    namespace 'com.vertcdemo.base'
    compileSdk project.compileSdkVersion
    namespace "com.vertcdemo.base"

    defaultConfig {
        minSdkVersion project.minSdkVersion
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion project.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ensureProperty('SERVER_URL')
        buildConfigField('String', 'SERVER_URL', "\"${project.SERVER_URL}\"")
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(project.javaLanguageVersion)
        }
    }
    kotlinOptions {
        freeCompilerArgs += '-Xjvm-default=all'
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.constraintlayout

    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    implementation libs.eventbus
    implementation libs.gson
    implementation libs.okhttp
    implementation libs.okhttp.loggingInterceptor
    implementation libs.retrofit2
    implementation libs.retrofit2.converter.gson
    implementation libs.retrofit2.converter.scalars
}

private def ensureProperty(String propertyName) {
    if (!project.hasProperty(propertyName) || project[propertyName].isEmpty()) {
        throw new GradleException("NO ${propertyName} defined in gradle.properties!")
    }
}